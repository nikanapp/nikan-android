apply plugin: 'com.android.application'

android {
    sourceSets {
        main {
            jniLibs.srcDirs = ['jniLibs']
        }
    }

    File appFile = file('app.properties');
    Properties props = new Properties()
    props.load(new FileInputStream(appFile))
    def CONFIG = { k -> "\"${props[k]}\"" }

    signingConfigs {
        release {
            // 正式版的发布配置
            if (appFile.exists()) {
                if (props.containsKey('KEYSTORE_FILE')
                        && props.containsKey('KEYSTORE_PASSWORD')
                        && props.containsKey('KEY_ALIAS')
                        && props.containsKey('KEY_PASSWORD')) {
                    // 发布的签名设置1
                    storeFile file(props['KEYSTORE_FILE'])
                    storePassword props['KEYSTORE_PASSWORD']
                    keyAlias props['KEY_ALIAS']
                    keyPassword props['KEY_PASSWORD']
                } else {
                    throw new InvalidUserDataException(
                            "You should define KEYSTORE_FILE and KEYSTORE_PASSWORD and KEY_ALIAS and KEY_PASSWORD in keystore.properties."
                    )
                }
            } else {
                throw new InvalidUserDataException("keystore.properties not exists.")
            }
        }
        debug {
        }
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId "com.bloomlife.videoapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        multiDexEnabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }

    buildTypes {

        def BOOLEAN = "boolean"
        def STRING = "String"
        def TRUE = "true"
        def FALSE = "false"

        def RELEASE_DOMAIN = "\"http://dev.nikanapp.me/videoserver/app\"";
        def DEVELOP_DOMAIN = "\"http://dev.nikanapp.me/videoserver/app\"";

        def BUG_TAGS = "BUG_TAGS"
        def SSO_LOGIN = "SSO_LOGIN"
        def LOGGER_DEBUG = "LOGGER_DEBUG"
        def HTTP_APP_API_DOMAIN = "HTTP_APP_API_DOMAIN"

        // 正式版的配置
        release {
            multiDexEnabled true
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            buildConfigField(BOOLEAN, SSO_LOGIN, FALSE)
            buildConfigField(BOOLEAN, LOGGER_DEBUG, FALSE)
            buildConfigField(BOOLEAN, BUG_TAGS, FALSE)
            buildConfigField(STRING, HTTP_APP_API_DOMAIN, RELEASE_DOMAIN)
        }

        // 开发时的配置
        debug {
            multiDexEnabled true
            minifyEnabled false
            signingConfig signingConfigs.debug
            buildConfigField(BOOLEAN, SSO_LOGIN, TRUE)
            buildConfigField(BOOLEAN, LOGGER_DEBUG, TRUE)
            buildConfigField(BOOLEAN, BUG_TAGS, TRUE)
            buildConfigField(STRING, HTTP_APP_API_DOMAIN, DEVELOP_DOMAIN)

            buildConfigField(STRING, "SINA_APP_KY", CONFIG('SINA_APP_KY'))
            buildConfigField(STRING, "SINA_REDIRECT_URL", CONFIG('SINA_REDIRECT_URL'))
            buildConfigField(STRING, "SINA_COPE", CONFIG('SINA_COPE'))
            buildConfigField(STRING, "WECHAT_APP_ID", CONFIG('WECHAT_APP_ID'))
        }

        // 使用正式版key进行开发
        releaseKeyDebug{
            multiDexEnabled true
            minifyEnabled false
            signingConfig signingConfigs.release
            buildConfigField(BOOLEAN, SSO_LOGIN, FALSE)
            buildConfigField(BOOLEAN, LOGGER_DEBUG, TRUE)
            buildConfigField(BOOLEAN, BUG_TAGS, TRUE)
            buildConfigField(STRING, HTTP_APP_API_DOMAIN, DEVELOP_DOMAIN)
            debuggable true
        }
    }
    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.4.1'
    configurations.all {
        resolutionStrategy {
            force 'androidx.core:core:1.6.0'
            force 'androidx.core:core-ktx:1.6.0'
        }
    }

    compile (name: 'selectableroundedimageview-1.0.1', ext: 'aar')
    compile project(':baseframe')
    implementation project(':camera360')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'com.mapbox.maps:android:10.11.0'
    implementation 'io.github.sinaweibosdk:core:13.10.0@aar'
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android:6.8.0'
}
